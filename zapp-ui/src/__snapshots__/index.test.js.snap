// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Mocks basic components Mock of Avatar Component 1`] = `"Avatar (label= Sent)"`;

exports[`Test Mocks basic components Mock of Badge Component 1`] = `"Badge (value= testValue)"`;

exports[`Test Mocks basic components Mock of Button Component 1`] = `"Button (label= Button)"`;

exports[`Test Mocks basic components Mock of Icon Component 1`] = `"Icon (size= small)"`;

exports[`Test Mocks basic components Mock of Link Component 1`] = `"Link (color= primary)"`;

exports[`Test Mocks basic components Mock of LoadMore Component 1`] = `"LoadMore (label= open)"`;

exports[`Test Mocks basic components Mock of Logo Component 1`] = `"Logo (size= small, children=Example Text)"`;

exports[`Test Mocks basic components Mock of Text Component 1`] = `"Text (size=small, children=Example Text)"`;

exports[`Test Mocks composites components Mock of DownloadFileButton Component 1`] = `"DownloadFileButton ( fileName= Example.text )"`;

exports[`Test Mocks composites components Mock of FormSection Component 1`] = `"FormSection (label= test label)"`;

exports[`Test Mocks composites components Mock of GenericFileIcon Component 1`] = `"GenericFileIcon ( fileName= test name )"`;

exports[`Test Mocks composites components Mock of Header Component 1`] = `"Header ( quota=63, onMenuClick=unset, onUserClick=unset, navigationBarIsOpen=unset, userBarIsOpen=unset)"`;

exports[`Test Mocks composites components Mock of MenuPanel Component 1`] = `"MenuPanel ( menuIsOpen=unset, tree=set)"`;

exports[`Test Mocks composites components Mock of MessageBubble Component 1`] = `"MessageBubble ( position=left)"`;

exports[`Test Mocks composites components Mock of NavigationPanel Component 1`] = `"NavigationPanel ( menuTree=set, navigationBarIsOpen=unset, onCollapserClick=unset,tree=set)"`;

exports[`Test Mocks display components Mock of Chip Component 1`] = `"Chip (label= example)"`;

exports[`Test Mocks display components Mock of Dropdown Component 1`] = `
<ul>
  Dropdown (items id=activity-1,activity-2,activity-3):
  <li>
    IconButton (icon= ArrowDown)
  </li>
  <li>
    IconButton (icon= ArrowUp)
  </li>
  <li>
    IconButton (icon= ArrowLeft)
  </li>
  <li>
    IconButton (icon= ArrowRight)
  </li>
</ul>
`;

exports[`Test Mocks display components Mock of List Component 1`] = `"List (Factory= unset ,amount: 2)"`;

exports[`Test Mocks display components Mock of ListHeader Component 1`] = `"ListHeader (allSelected = unset)"`;

exports[`Test Mocks display components Mock of Popover Component 1`] = `"Popover (placement = right)"`;

exports[`Test Mocks display components Mock of Popper Component 1`] = `"Popover (placement = left)"`;

exports[`Test Mocks display components Mock of Table Component 1`] = `"Table (rowFactory = unset)"`;

exports[`Test Mocks display components Mock of tooltip Component 1`] = `"Tooltip (label = test label)"`;

exports[`Test Mocks inputs components Mock of Checkbox Component 1`] = `"label: checkbox label"`;

exports[`Test Mocks inputs components Mock of ChipInput Component 1`] = `"ChipInput (value0 contactsTo)"`;

exports[`Test Mocks inputs components Mock of EmailComposerInput Component 1`] = `"EmailComposerInput (placeholder= Object)"`;

exports[`Test Mocks inputs components Mock of FileLoader Component 1`] = `"FileLoader (onChange= unset)"`;

exports[`Test Mocks inputs components Mock of IconButton Component 1`] = `"IconButton (icon= Pricetags)"`;

exports[`Test Mocks inputs components Mock of IconCheckbox Component 1`] = `"IconCheckbox (icon= Text)"`;

exports[`Test Mocks inputs components Mock of Input Component 1`] = `"label: Input"`;

exports[`Test Mocks inputs components Mock of PasswordInput Component 1`] = `"PasswordInput (label= PasswordInput)"`;

exports[`Test Mocks inputs components Mock of SearchInput Component 1`] = `"SearchInput (onChange= unset)"`;

exports[`Test Mocks inputs components Mock of Select Component 1`] = `"Select (label= Select an item)"`;

exports[`Test Mocks layout components Mock of Container Component 1`] = `
<ul>
  Container (orientation=vertical):
  <li>
    Text (size=small, children=Example Text 1)
  </li>
  <li>
    Text (size=medium, children=Example Text 2)
  </li>
  <li>
    Text (size=large, children=Example Text 3)
  </li>
</ul>
`;

exports[`Test Mocks layout components Mock of Divider Component 1`] = `"Divider (color= gray2)"`;

exports[`Test Mocks layout components Mock of Padding Component 1`] = `"Padding (vertical= small)"`;

exports[`Test Mocks layout components Mock of Paragraph Component 1`] = `"Paragraph (overflow= break-word)"`;

exports[`Test Mocks layout components Mock of Row Component 1`] = `"Row (display= flex)"`;

exports[`Test Mocks modal components Mock of Modal Component 1`] = `"Modal (title = title test)"`;

exports[`Test Mocks modal components Mock of Quota Component 1`] = `"Quota (fill = set)"`;

exports[`Test Mocks modal components Mock of Snackbar Component 1`] = `"Snackbar (label = test label)"`;

exports[`Test Mocks navigation components Mock of Accordion Component 1`] = `"Accordion (label= Accordion)"`;

exports[`Test Mocks navigation components Mock of Breadcrumbs Component 1`] = `"BreadCrumbs (crumbs= undefined)"`;

exports[`Test Mocks utilities components Mock of Catcher Component 1`] = `"Catcher (onError = unset)"`;

exports[`Test Mocks utilities components Mock of Collapse Component 1`] = `"Collapse (open = unset)"`;

exports[`Test Mocks utilities components Mock of Responsive Component 1`] = `"Responsive (mode = set)"`;

exports[`Test Mocks utilities components Mock of Transition Component 1`] = `"Transition (transitionTarget = all)"`;
